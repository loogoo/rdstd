/* soapStub.h
   Generated by gSOAP 2.8.17r from rdms.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20817
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_WEB_DOI
#define SOAP_TYPE_WEB_DOI (19)
/* WEB-DOI */
struct WEB_DOI
{
public:
	unsigned short nStatID;	/* required element of type xsd:u16 */
	unsigned short nDevID;	/* required element of type xsd:u16 */
	unsigned int dCode;	/* required element of type xsd:u32 */
public:
	int soap_type() const { return 19; } /* = unique type id SOAP_TYPE_WEB_DOI */
};
typedef struct WEB_DOI WEB_DOI;
#endif

#ifndef SOAP_TYPE_WEB_DOIVAL
#define SOAP_TYPE_WEB_DOIVAL (20)
/* WEB-DOIVAL */
struct WEB_DOIVAL
{
public:
	struct WEB_DOI doi;	/* required element of type WEB-DOI */
	unsigned short type;	/* required element of type xsd:u16 */
	unsigned int val;	/* required element of type xsd:u32 */
	double dVal;	/* required element of type xsd:double */
	bool bValid;	/* required element of type xsd:bool */
	time_t rvTime;	/* required element of type xsd:time */
public:
	int soap_type() const { return 20; } /* = unique type id SOAP_TYPE_WEB_DOIVAL */
};
typedef struct WEB_DOIVAL WEB_DOIVAL;
#endif

#ifndef SOAP_TYPE_ARR_WEB_DOI
#define SOAP_TYPE_ARR_WEB_DOI (21)
/* ARR-WEB-DOI */
class SOAP_CMAC ARR_WEB_DOI
{
public:
	int __size;	/* sequence of elements <item> */
	struct WEB_DOI *__ptr;
	ARR_WEB_DOI();	/* transient */
	ARR_WEB_DOI(struct soap *_param_1, int n);	/* transient */
	virtual ~ARR_WEB_DOI();	/* transient */
	int size();	/* transient */
	void resize(int n);	/* transient */
	struct WEB_DOI &operator[](int i) const;	/* transient */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_ARR_WEB_DOI */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
};
#endif

#ifndef SOAP_TYPE_ARR_WEB_DOIVAL
#define SOAP_TYPE_ARR_WEB_DOIVAL (35)
/* SOAP encoded array of WEB-DOIVAL schema type: */
class SOAP_CMAC ARR_WEB_DOIVAL
{
public:
	struct WEB_DOIVAL *__ptr;
	int __size;
	ARR_WEB_DOIVAL();	/* transient */
	ARR_WEB_DOIVAL(struct soap *_param_2, int n);	/* transient */
	virtual ~ARR_WEB_DOIVAL();	/* transient */
	int size();	/* transient */
	void resize(int n);	/* transient */
	struct WEB_DOIVAL &operator[](int i) const;	/* transient */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique type id SOAP_TYPE_ARR_WEB_DOIVAL */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
};
#endif

#ifndef SOAP_TYPE_vector
#define SOAP_TYPE_vector (44)
/* SOAP encoded array of xsd:int schema type: */
class SOAP_CMAC vector
{
public:
	int *__ptr;
	int __size;
	struct soap *soap;	/* transient */
	vector();	/* transient */
	vector(int _param_3);	/* transient */
	virtual ~vector();	/* transient */
	void resize(int _param_4);	/* transient */
	int &operator[](int _param_5) const;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique type id SOAP_TYPE_vector */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
};
#endif

#ifndef SOAP_TYPE_matrix
#define SOAP_TYPE_matrix (52)
/* SOAP encoded array of xsd:int[] schema type: */
class SOAP_CMAC matrix
{
public:
	vector *__ptr;
	int __size;
	struct soap *soap;	/* transient */
	matrix();	/* transient */
	matrix(int _param_6, int _param_7);	/* transient */
	virtual ~matrix();	/* transient */
	void resize(int _param_8, int _param_9);	/* transient */
	vector &operator[](int _param_10) const;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique type id SOAP_TYPE_matrix */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
};
#endif

#ifndef SOAP_TYPE_ns__GetDataResponse
#define SOAP_TYPE_ns__GetDataResponse (61)
/* ns:GetDataResponse */
struct ns__GetDataResponse
{
public:
	struct WEB_DOIVAL *pVal;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type WEB-DOIVAL */
public:
	int soap_type() const { return 61; } /* = unique type id SOAP_TYPE_ns__GetDataResponse */
};
#endif

#ifndef SOAP_TYPE_ns__GetData
#define SOAP_TYPE_ns__GetData (62)
/* ns:GetData */
struct ns__GetData
{
public:
	struct WEB_DOI doi;	/* required element of type WEB-DOI */
public:
	int soap_type() const { return 62; } /* = unique type id SOAP_TYPE_ns__GetData */
};
#endif

#ifndef SOAP_TYPE_ns__GetDataNResponse
#define SOAP_TYPE_ns__GetDataNResponse (66)
/* ns:GetDataNResponse */
struct ns__GetDataNResponse
{
public:
	ARR_WEB_DOIVAL *pVal;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfWEB-DOIVAL */
public:
	int soap_type() const { return 66; } /* = unique type id SOAP_TYPE_ns__GetDataNResponse */
};
#endif

#ifndef SOAP_TYPE_ns__GetDataN
#define SOAP_TYPE_ns__GetDataN (67)
/* ns:GetDataN */
struct ns__GetDataN
{
public:
	ARR_WEB_DOI *doi;	/* optional element of type ARR-WEB-DOI */
public:
	int soap_type() const { return 67; } /* = unique type id SOAP_TYPE_ns__GetDataN */
};
#endif

#ifndef SOAP_TYPE_ns__multiResponse
#define SOAP_TYPE_ns__multiResponse (70)
/* ns:multiResponse */
struct ns__multiResponse
{
public:
	int *c;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 70; } /* = unique type id SOAP_TYPE_ns__multiResponse */
};
#endif

#ifndef SOAP_TYPE_ns__multi
#define SOAP_TYPE_ns__multi (71)
/* ns:multi */
struct ns__multi
{
public:
	int a;	/* required element of type xsd:int */
	int b;	/* required element of type xsd:int */
public:
	int soap_type() const { return 71; } /* = unique type id SOAP_TYPE_ns__multi */
};
#endif

#ifndef SOAP_TYPE_ns__magicResponse
#define SOAP_TYPE_ns__magicResponse (74)
/* ns:magicResponse */
struct ns__magicResponse
{
public:
	matrix *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfArrayOfint */
public:
	int soap_type() const { return 74; } /* = unique type id SOAP_TYPE_ns__magicResponse */
};
#endif

#ifndef SOAP_TYPE_ns__magic
#define SOAP_TYPE_ns__magic (75)
/* ns:magic */
struct ns__magic
{
public:
	int rank;	/* required element of type xsd:int */
public:
	int soap_type() const { return 75; } /* = unique type id SOAP_TYPE_ns__magic */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (76)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 76; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (77)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 77; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (79)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 79; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (81)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 81; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (82)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 82; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__u16
#define SOAP_TYPE_xsd__u16 (10)
typedef unsigned short xsd__u16;
#endif

#ifndef SOAP_TYPE_xsd__u32
#define SOAP_TYPE_xsd__u32 (11)
typedef unsigned int xsd__u32;
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (13)
typedef double xsd__double;
#endif

#ifndef SOAP_TYPE_xsd__bool
#define SOAP_TYPE_xsd__bool (15)
typedef bool xsd__bool;
#endif

#ifndef SOAP_TYPE_xsd__time
#define SOAP_TYPE_xsd__time (17)
typedef time_t xsd__time;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (18)
typedef int xsd__int;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__GetData(struct soap*, struct WEB_DOI doi, struct WEB_DOIVAL *pVal);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetDataN(struct soap*, ARR_WEB_DOI *doi, ARR_WEB_DOIVAL *pVal);

SOAP_FMAC5 int SOAP_FMAC6 ns__multi(struct soap*, int a, int b, int *c);

SOAP_FMAC5 int SOAP_FMAC6 ns__magic(struct soap*, int rank, matrix *result);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetDataN(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__multi(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__magic(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetData(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct WEB_DOI doi, struct WEB_DOIVAL *pVal);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetDataN(struct soap *soap, const char *soap_endpoint, const char *soap_action, ARR_WEB_DOI *doi, ARR_WEB_DOIVAL *pVal);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__multi(struct soap *soap, const char *soap_endpoint, const char *soap_action, int a, int b, int *c);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__magic(struct soap *soap, const char *soap_endpoint, const char *soap_action, int rank, matrix *result);

#endif

/* End of soapStub.h */
